# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build gateway artifact

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    environment: prod
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      working-directory: ./gateway
      run: mvn -B package --file pom.xml
    - name: Build and publish image to Quay
      uses: docker/build-push-action@v1
      with:
        path: 'gateway'
        registry: 'quay.io'
        repository: 'testing'
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        tags: 'latest'
    # - name: Build the Docker image
    #   working-directory: ./gateway
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
  # deployment:
  #   needs: build
    
  #   runs-on: ubuntu-latest
  #   steps:
      # - uses: actions/checkout@master
      # - name: Get image tags
      #   id: image_tags
      #   run: |
      #     echo -n ::set-output name=IMAGE_TAGS::
      #     VERSION=$(jq -r '.version' ${context}/version.json)
      #     TAGS=('latest')
      #     if [ "${VERSION}" ] && [ "${VERSION}" != "latest" ]; then
      #         TAGS+=("${VERSION}")
      #     fi
      #     if [[ "${GITHUB_REF}" =~ refs/tags/(.*) ]]; then
      #         TAGS+=("git-${BASH_REMATCH[1]}")
      #     fi
      #     ( IFS=$','; echo "${TAGS[*]}" )
